version: '3.5'
services:
  api1: # API - Instância 01
    build:
      context: ../
      dockerfile: ./infra/Dockerfile
    hostname: api1
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migratedb:
        condition: service_completed_successfully        
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: '0.37'
          memory: '0.87GB'

  api2: # API - Instância 02
    build:
      context: ../
      dockerfile: ./infra/Dockerfile
    hostname: api2
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migratedb:
        condition: service_completed_successfully
    expose:
      - "3000"
    deploy:
      resources:
        limits:
          cpus: '0.37'
          memory: '0.87GB'
  
  migratedb:
    image: node:lts-alpine3.18
    command: npx prisma migrate deploy
    volumes: 
      - ../prisma:/prisma
    environment:
      DATABASE_URL: postgresql://local:local123@db:5432/mydb
    depends_on:
      db:
        condition: service_healthy

  nginx: # Load Balancer
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.50GB'

  db: # Banco de dados
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: local123
      POSTGRES_USER: local
      POSTGRES_DB: mydb
    ports:
      - 5432:5432
    volumes:
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: '0.75GB'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 5